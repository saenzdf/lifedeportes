# === INICIO DE LA L√ìGICA DE LA ACCI√ìN ===
task = record

if task.sale_line_id:
    sale_order = task.sale_line_id.order_id

    # 1. Buscar la Orden de Fabricaci√≥n "Consolidada" principal.
    parent_mo = env['mrp.production'].search([
        ('origin', '=', sale_order.name)
    ], order='id desc', limit=1)

    if parent_mo:
        task.message_post(body=f"Verificando disponibilidad de componentes para la OF <strong>{parent_mo.name}</strong>...")

        # 2. Re-intentar la asignaci√≥n inicial para tener el estado m√°s actualizado.
        parent_mo.action_assign()

        # 3. Identificar los movimientos de materia prima que no est√°n disponibles.
        # Un movimiento 'confirmed' significa que Odoo est√° esperando stock. 'assigned' significa que ya est√° reservado.
        moves_to_fix = parent_mo.move_raw_ids.filtered(lambda m: m.state == 'confirmed')

        if not moves_to_fix:
            task.message_post(
                body=f"‚úÖ <strong>¬°Todo listo!</strong> Todos los componentes para la OF <strong>{parent_mo.name}</strong> ya estaban disponibles y reservados.",
                subtype_xmlid='mail.mt_note', body_is_html=True
            )
        else:
            log_messages = []
            # Obtenemos la ubicaci√≥n de stock principal del almac√©n de la OF.
            stock_location = parent_mo.location_src_id
            if not stock_location:
                raise UserError("La Orden de Fabricaci√≥n no tiene una ubicaci√≥n de origen definida.")

            # 4. Para cada componente faltante, ajustar el inventario.
            for move in moves_to_fix:
                product = move.product_id
                needed_qty = move.product_uom_qty - move.quantity_reserved
                
                if needed_qty > 0:
                    # Usamos la funci√≥n interna de Odoo para actualizar el stock de forma segura.
                    env['stock.quant']._update_available_quantity(product, stock_location, needed_qty)
                    
                    log_message = f"<li>Componente <strong>{product.display_name}</strong>: Se necesitaban {needed_qty:.2f} {move.product_uom_id.name}. Inventario ajustado.</li>"
                    log_messages.append(log_message)
            # 5. Volver a intentar la asignaci√≥n ahora que el stock ha sido ajustado.
            parent_mo.action_assign()

            # 6. Informar del resultado en la tarea.
            final_moves_to_fix = parent_mo.move_raw_ids.filtered(lambda m: m.state == 'confirmed')
            
            summary_message = "<ul>" + "".join(log_messages) + "</ul>"

            if not final_moves_to_fix:
                task.message_post(
                    body=f"""
                    <p>üîß <strong>Ajuste de inventario completado.</strong></p>
                    {summary_message}
                    <p>‚úÖ La Orden de Fabricaci√≥n <strong>{parent_mo.name}</strong> est√° lista </p>
                    """,
                    subtype_xmlid='mail.mt_note', body_is_html=True
                )
            else:
                task.message_post(
                    body=f"""
                    <p>‚ö†Ô∏è <strong>Atenci√≥n: Ajuste de inventario realizado, pero persisten problemas.</strong></p>
                    {summary_message}
                    <p>La OF <strong>{parent_mo.name}</strong> a√∫n tiene componentes no disponibles. Por favor, revise manualmente.</p>
                    """,
                    subtype_xmlid='mail.mt_comment', body_is_html=True
                )

    else:
        task.message_post(
            body=f"<strong>Error:</strong> No se encontr√≥ la OF consolidada para el Pedido {sale_order.name}.",
            body_is_html=True
        )
else:
    task.message_post(
        body=f"<strong>Error:</strong> La tarea no est√° ligada a un pedido de venta.",
        body_is_html=True
    )
